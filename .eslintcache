[{"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\index.js":"1","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Reducer\\actions.js":"2","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Reducer\\Saga\\reduxSaga.js":"3","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Reducer\\Reducer.js":"4","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Navigator\\Navigator.js":"5","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\Body\\Body.js":"6","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\App.js":"7","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\Editor\\Editor.js":"8","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Employee\\EmployeeList\\EmployeeList.js":"9","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\index.js":"10","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\Item\\Item.js":"11","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\reportWebVitals.js":"12","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Employee\\index.js":"13"},{"size":517,"mtime":1606458246945,"results":"14","hashOfConfig":"15"},{"size":236,"mtime":1606458246941,"results":"16","hashOfConfig":"15"},{"size":452,"mtime":1606458246938,"results":"17","hashOfConfig":"15"},{"size":1120,"mtime":1606458246927,"results":"18","hashOfConfig":"15"},{"size":887,"mtime":1606903585761,"results":"19","hashOfConfig":"15"},{"size":1232,"mtime":1606893907139,"results":"20","hashOfConfig":"15"},{"size":1076,"mtime":1606903662572,"results":"21","hashOfConfig":"15"},{"size":1316,"mtime":1606893907567,"results":"22","hashOfConfig":"15"},{"size":1346,"mtime":1606999303400,"results":"23","hashOfConfig":"15"},{"size":226,"mtime":1606893747937,"results":"24","hashOfConfig":"15"},{"size":1613,"mtime":1606893907446,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"15"},{"size":209,"mtime":1606899514682,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zzza5f",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\index.js",[],["61","62"],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Reducer\\actions.js",[],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Reducer\\Saga\\reduxSaga.js",[],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Reducer\\Reducer.js",[],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Navigator\\Navigator.js",["63","64"],"import { Menu, Tabs } from \"antd\";\r\nimport { Header } from \"antd/lib/layout/layout\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Navigator = (props, history) => {\r\n  const [current, setCurrent] = useState(\"todo\");\r\n\r\n  let handleClick = (e) => {\r\n    setCurrent(e.key);\r\n  };\r\n  return (\r\n    <>\r\n      <Header style={{ background: \"white\" }}>\r\n        <Menu\r\n          onClick={(e) => {\r\n            handleClick(e);\r\n          }}\r\n          selectedKeys={current}\r\n          mode=\"horizontal\"\r\n        >\r\n          <Menu.Item key=\"todo\">\r\n            <Link to=\"/\">Todo</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"employee\">\r\n            <Link to=\"/employee\">Employees</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n",["65","66"],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\Body\\Body.js",["67"],"import { Col, Divider, Row } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Item from \"../Item/Item\";\r\nimport * as actions from \"../../../Reducer/actions\";\r\n\r\nlet Body = (props) => {\r\n  let todoList = useSelector((state) => state.todoList);\r\n  let dispatch = useDispatch();\r\n\r\n  todoList.reverse();\r\n  let todos = undefined;\r\n  if (todoList.length > 0) {\r\n    todos = todoList.map((element, index) => {\r\n      return <Item key={element.id} data={element} counter={index + 1} />;\r\n    });\r\n  }\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    dispatch({ type: actions.FETCH_TODOLIST });\r\n  }, []);\r\n\r\n  //each time it will run if render changes\r\n  useEffect(() => {\r\n    dispatch({ type: actions.SAVE_TODO_LIST, payload: todoList });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={12}>\r\n          <Divider style={{ marginTop: 5 }} orientation=\"left\">\r\n            Todos'\r\n          </Divider>\r\n        </Col>\r\n      </Row>\r\n\r\n      {todos ? (\r\n        <span data-testid=\"YData\">{todos}</span>\r\n      ) : (\r\n        <span data-testid=\"noData\">{\"Todo list is Empty!\"}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Body;\r\n","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\App.js",["68"],"import \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./Reducer/Reducer\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\n// import { get } from \"idb-keyval\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchSaga } from \"./Reducer/Saga\";\r\nimport Navigator from \"./Components/Navigator/Navigator\";\r\nimport { BrowserRouter, Route, Router, Switch } from \"react-router-dom\";\r\nimport Todo from \"./Components/Todo\";\r\nimport Employee from \"./Components/Employee\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nlet store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(watchSaga);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Navigator />\r\n          <Switch>\r\n            <Route path=\"/employee\" component={Employee} />\r\n            <Route path=\"/\" exact component={Todo} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["69","70"],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\Editor\\Editor.js",["71"],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Employee\\EmployeeList\\EmployeeList.js",["72"],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\index.js",[],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Todo\\Item\\Item.js",["73"],"import { Col, Input, Row, Tag } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../../Reducer/actions\";\r\n\r\nlet Item = (props) => {\r\n  let dispatch = useDispatch();\r\n  let [todoData, setTodoData] = useState(\"\");\r\n\r\n  let closeThisTodo = (ev) => {\r\n    dispatch({ type: actions.REMOVE_TODO, payload: { id: ev } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTodoData(props.data.message);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={10}>\r\n          <Tag\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"5px 20px\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"left\",\r\n              marginTop: \"5px\",\r\n              backgroundColor: props.data.color,\r\n            }}\r\n          >\r\n            {props.counter}.&nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              value={todoData}\r\n              onChange={(event) => {\r\n                setTodoData(event.target.value);\r\n              }}\r\n              style={{\r\n                width: \"90%\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                color: \"#4c4848\",\r\n              }}\r\n            />\r\n            <CloseOutlined\r\n              data-testid=\"close\"\r\n              style={{ float: \"right\", marginTop: \"7px\" }}\r\n              onClick={() => closeThisTodo(props.data.id)}\r\n            />\r\n          </Tag>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\reportWebVitals.js",[],"C:\\Users\\Himanshu Verma\\Desktop\\GIT\\react-todo\\src\\Components\\Employee\\index.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":16,"nodeType":"80","messageId":"81","endLine":4,"endColumn":26},{"ruleId":"78","severity":1,"message":"82","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":16},{"ruleId":"74","replacedBy":"83"},{"ruleId":"76","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":22,"column":6,"nodeType":"87","endLine":22,"endColumn":8,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"89","line":10,"column":32,"nodeType":"80","messageId":"81","endLine":10,"endColumn":38},{"ruleId":"74","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},{"ruleId":"78","severity":1,"message":"92","line":4,"column":23,"nodeType":"80","messageId":"81","endLine":4,"endColumn":34},{"ruleId":"78","severity":1,"message":"93","line":8,"column":7,"nodeType":"80","messageId":"81","endLine":8,"endColumn":15},{"ruleId":"85","severity":1,"message":"94","line":17,"column":6,"nodeType":"87","endLine":17,"endColumn":8,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'TabPane' is assigned a value but never used.",["96"],["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'Router' is defined but never used.",["96"],["97"],"'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data.message'. Either include it or remove the dependency array. If 'setTodoData' needs the current value of 'props.data.message', you can also switch to useReducer instead of useState and read 'props.data.message' in the reducer.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},"Update the dependencies array to be: [props.data.message]",{"range":"106","text":"107"},[668,670],"[dispatch]",[530,532],"[props.data.message]"]