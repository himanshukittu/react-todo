[{"C:\\gitHUB\\react-todo\\src\\reportWebVitals.js":"1","C:\\gitHUB\\react-todo\\src\\Components\\Navigator\\Navigator.js":"2","C:\\gitHUB\\react-todo\\src\\Components\\Employee\\index.js":"3","C:\\gitHUB\\react-todo\\src\\Components\\Employee\\EmployeeList\\EmployeeList.js":"4","C:\\gitHUB\\react-todo\\src\\Components\\Todo\\Item\\Item.js":"5","C:\\gitHUB\\react-todo\\src\\App.js":"6","C:\\gitHUB\\react-todo\\src\\Reducer\\Saga\\index.js":"7","C:\\gitHUB\\react-todo\\src\\Components\\Todo\\Editor\\Editor.js":"8","C:\\gitHUB\\react-todo\\src\\Reducer\\Saga\\reduxSaga.js":"9","C:\\gitHUB\\react-todo\\src\\index.js":"10","C:\\gitHUB\\react-todo\\src\\Reducer\\actions.js":"11","C:\\gitHUB\\react-todo\\src\\Components\\Todo\\Body\\Body.js":"12","C:\\gitHUB\\react-todo\\src\\Components\\Todo\\index.js":"13"},{"size":375,"mtime":1607415396190,"results":"14","hashOfConfig":"15"},{"size":887,"mtime":1607415396158,"results":"16","hashOfConfig":"17"},{"size":209,"mtime":1607415396158,"results":"18","hashOfConfig":"17"},{"size":1514,"mtime":1617951637216,"results":"19","hashOfConfig":"17"},{"size":1613,"mtime":1607415396166,"results":"20","hashOfConfig":"17"},{"size":1168,"mtime":1628849546669,"results":"21","hashOfConfig":"17"},{"size":391,"mtime":1617951424909,"results":"22","hashOfConfig":"17"},{"size":1316,"mtime":1607415396166,"results":"23","hashOfConfig":"17"},{"size":737,"mtime":1617951339282,"results":"24","hashOfConfig":"17"},{"size":517,"mtime":1607415396190,"results":"25","hashOfConfig":"17"},{"size":295,"mtime":1607415396174,"results":"26","hashOfConfig":"17"},{"size":1246,"mtime":1607415733077,"results":"27","hashOfConfig":"17"},{"size":226,"mtime":1607415396174,"results":"28","hashOfConfig":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15z03x7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16c9sus",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\gitHUB\\react-todo\\src\\reportWebVitals.js",[],"C:\\gitHUB\\react-todo\\src\\Components\\Navigator\\Navigator.js",["61","62"],"C:\\gitHUB\\react-todo\\src\\Components\\Employee\\index.js",[],["63","64"],"C:\\gitHUB\\react-todo\\src\\Components\\Employee\\EmployeeList\\EmployeeList.js",["65"],"import { Card, Col, Row, Space, Spin } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n// import * as actions from \"../../../Reducer/actions\";\r\n\r\nconst EmployeeList = (props) => {\r\n  let dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  let cards = undefined;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(\"http://3.7.134.217:9006/vsearch/getpercent?client_id=11\", {headers : {\"Access-Control-Allow-Origin\": \"*\"}})\r\n      .then((response) => {\r\n        console.log(\"<<<<see here>>>\", response);\r\n        setPosts(response.data);\r\n      })\r\n      .catch()\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  cards = posts.map((element, index) => {\r\n    return (\r\n      <Col id={element.id} style={{ padding: \"10px\" }}>\r\n        <Card\r\n          style={{ width: \"200px\", height: \"300px\", overflow: \"hidden\" }}\r\n          title={element.title}\r\n        >\r\n          <p>{element.body}</p>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  let spinner = (\r\n    <Space size=\"large\" data-testid=\"spinner\">\r\n      <Spin size=\"large\"></Spin>\r\n    </Space>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        spinner\r\n      ) : (\r\n        <Row justify=\"center\" data-testid=\"cardss\">\r\n          {cards ? cards : null}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n","C:\\gitHUB\\react-todo\\src\\Components\\Todo\\Item\\Item.js",["66"],"import { Col, Input, Row, Tag } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../../Reducer/actions\";\r\n\r\nlet Item = (props) => {\r\n  let dispatch = useDispatch();\r\n  let [todoData, setTodoData] = useState(\"\");\r\n\r\n  let closeThisTodo = (ev) => {\r\n    dispatch({ type: actions.REMOVE_TODO, payload: { id: ev } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTodoData(props.data.message);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={10}>\r\n          <Tag\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"5px 20px\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"left\",\r\n              marginTop: \"5px\",\r\n              backgroundColor: props.data.color,\r\n            }}\r\n          >\r\n            {props.counter}.&nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              value={todoData}\r\n              onChange={(event) => {\r\n                setTodoData(event.target.value);\r\n              }}\r\n              style={{\r\n                width: \"90%\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                color: \"#4c4848\",\r\n              }}\r\n            />\r\n            <CloseOutlined\r\n              data-testid=\"close\"\r\n              style={{ float: \"right\", marginTop: \"7px\" }}\r\n              onClick={() => closeThisTodo(props.data.id)}\r\n            />\r\n          </Tag>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\gitHUB\\react-todo\\src\\App.js",["67"],"C:\\gitHUB\\react-todo\\src\\Reducer\\Saga\\index.js",["68"],"C:\\gitHUB\\react-todo\\src\\Components\\Todo\\Editor\\Editor.js",["69"],"import { Col, Input, Row } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../Reducer/actions\";\r\n\r\nconst Editor = (props) => {\r\n  let dispatch = useDispatch();\r\n  const [newTodo, setNewTodo] = useState(undefined);\r\n\r\n  let handleAddTodo = () => {\r\n    if (newTodo) {\r\n      dispatch({ type: actions.ADD_TODO, payload: newTodo });\r\n    }\r\n    setNewTodo(undefined);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={8} style={{ textAlign: \"left\", marginTop: 10 }}>\r\n          <strong>Todo List</strong>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" style={{ marginTop: 5 }}>\r\n        <Col span={8}>\r\n          <Input\r\n            data-testid=\"editIt\"\r\n            value={newTodo}\r\n            onChange={(event) => setNewTodo(event.target.value)}\r\n            onKeyDown={(ev) => {\r\n              return ev.key === \"Enter\" ? handleAddTodo() : null;\r\n            }}\r\n            addonAfter={\r\n              <PlusOutlined\r\n                data-testid=\"UT_Add\"\r\n                onClick={() => handleAddTodo()}\r\n              />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","C:\\gitHUB\\react-todo\\src\\Reducer\\Saga\\reduxSaga.js",[],"C:\\gitHUB\\react-todo\\src\\index.js",[],"C:\\gitHUB\\react-todo\\src\\Reducer\\actions.js",[],["70","71"],"C:\\gitHUB\\react-todo\\src\\Components\\Todo\\Body\\Body.js",["72"],"import { Col, Divider, Row } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Item from \"../Item/Item\";\r\nimport * as actions from \"../../../Reducer/actions\";\r\n\r\nlet Body = (props) => {\r\n  let todoList = useSelector((state) => state.todoList);\r\n  let dispatch = useDispatch();\r\n\r\n  todoList.reverse();\r\n  let todos = undefined;\r\n  if (todoList.length > 0) {\r\n    todos = todoList.map((element, index) => {\r\n      return <Item key={element.id} data={element} counter={index + 1} />;\r\n    });\r\n  }\r\n\r\n  //componentDidMount checking push\r\n  useEffect(() => {\r\n    dispatch({ type: actions.FETCH_TODOLIST });\r\n  }, []);\r\n\r\n  //each time it will run if render changes\r\n  useEffect(() => {\r\n    dispatch({ type: actions.SAVE_TODO_LIST, payload: todoList });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={12}>\r\n          <Divider style={{ marginTop: 5 }} orientation=\"left\">\r\n            Todos'\r\n          </Divider>\r\n        </Col>\r\n      </Row>\r\n\r\n      {todos ? (\r\n        <span data-testid=\"YData\">{todos}</span>\r\n      ) : (\r\n        <span data-testid=\"noData\">{\"Todo list is Empty!\"}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Body;\r\n","C:\\gitHUB\\react-todo\\src\\Components\\Todo\\index.js",[],{"ruleId":"73","severity":1,"message":"74","line":4,"column":16,"nodeType":"75","messageId":"76","endLine":4,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":6,"column":9,"nodeType":"75","messageId":"76","endLine":6,"endColumn":16},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"73","severity":1,"message":"82","line":8,"column":7,"nodeType":"75","messageId":"76","endLine":8,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":17,"column":6,"nodeType":"85","endLine":17,"endColumn":8,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":10,"column":32,"nodeType":"75","messageId":"76","endLine":10,"endColumn":38},{"ruleId":"73","severity":1,"message":"88","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":23},{"ruleId":"73","severity":1,"message":"89","line":4,"column":23,"nodeType":"75","messageId":"76","endLine":4,"endColumn":34},{"ruleId":"78","replacedBy":"90"},{"ruleId":"80","replacedBy":"91"},{"ruleId":"83","severity":1,"message":"92","line":22,"column":6,"nodeType":"85","endLine":22,"endColumn":8,"suggestions":"93"},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'TabPane' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data.message'. Either include it or remove the dependency array. If 'setTodoData' needs the current value of 'props.data.message', you can also switch to useReducer instead of useState and read 'props.data.message' in the reducer.","ArrayExpression",["96"],"'Router' is defined but never used.","'fetchTodoList' is defined but never used.","'useSelector' is defined but never used.",["94"],["95"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [props.data.message]",{"range":"102","text":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},[530,532],"[props.data.message]",[682,684],"[dispatch]"]